{"ast":null,"code":"var _jsxFileName = \"/Users/aryansharma/Downloads/react/Tribal Items Trial/src/components/Store/CartProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartState = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.item.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartState, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/aryansharma/Downloads/react/Tribal Items Trial/src/components/Store/CartProvider.jsx"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartState","state","action","type","updatedItems","item","concat","updatedTotalAmount","price","amount","CartProvider","props","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC9B,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACnB,UAAMC,YAAY,GAAGH,KAAK,CAACI,IAAN,CAAWC,MAAX,CAAkBJ,MAAM,CAACG,IAAzB,CAArB;AACA,UAAME,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYG,KAAZ,GAAoBN,MAAM,CAACG,IAAP,CAAYI,MAA/E;AACA,WAAO;AACHX,MAAAA,KAAK,EAACM,YADH;AAEHL,MAAAA,WAAW,EAACQ;AAFT,KAAP;AAIH;;AACD,SAAOV,gBAAP;AACH,CAVD;;AAYA,MAAMa,YAAY,GAAIC,KAAD,IAAU;AAAA;;AAC3B,QAAM,CAACX,SAAD,EAAYY,kBAAZ,IAAkCjB,UAAU,CAACK,SAAD,EAAYH,gBAAZ,CAAlD;;AAEA,QAAMgB,oBAAoB,GAAIR,IAAD,IAAS;AAClCO,IAAAA,kBAAkB,CAAC;AACfT,MAAAA,IAAI,EAAC,KADU;AAEfE,MAAAA,IAAI,EAACA;AAFU,KAAD,CAAlB;AAIH,GALD;;AAMA,QAAMS,yBAAyB,GAAIC,EAAD,IAAO;AACrCH,IAAAA,kBAAkB,CAAC;AACfT,MAAAA,IAAI,EAAC,QADU;AAEfY,MAAAA,EAAE,EAACA;AAFY,KAAD,CAAlB;AAIH,GALD;;AAMA,QAAMC,WAAW,GAAG;AAChBlB,IAAAA,KAAK,EAAEE,SAAS,CAACF,KADD;AAEhBC,IAAAA,WAAW,EAAEC,SAAS,CAACD,WAFP;AAGhBkB,IAAAA,OAAO,EAAEJ,oBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3BD;;GAAMT,Y;;KAAAA,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\"\nimport CartContext from \"./Cart-Context\"\n\nconst defaultCartState = {\n    items:[],\n    totalAmount: 0\n}\n\nconst cartState = (state,action)=>{\n    if(action.type==='ADD'){\n        const updatedItems = state.item.concat(action.item)\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount\n        return {\n            items:updatedItems,\n            totalAmount:updatedTotalAmount\n        }\n    }\n    return defaultCartState\n}\n\nconst CartProvider = (props) =>{\n    const [cartState, dispatchCartAction] = useReducer(cartState, defaultCartState);\n    \n    const addItemToCartHandler = (item) =>{\n        dispatchCartAction({\n            type:\"ADD\",\n            item:item\n        })\n    }\n    const removeItemFromCartHandler = (id) =>{\n        dispatchCartAction({\n            type:\"REMOVE\",\n            id:id\n        })\n    }\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n    return(\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n}\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}