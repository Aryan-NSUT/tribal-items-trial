{"ast":null,"code":"var _jsxFileName = \"/Users/aryansharma/Downloads/react/Tribal Items Trial/src/components/Store/CartProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/aryansharma/Downloads/react/Tribal Items Trial/src/components/Store/CartProvider.jsx"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","updatedItems","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAChC,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACnB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AACA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CACzBJ,IAAD,IAASA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADP,CAA9B;AAIA,WAAO;AACHZ,MAAAA,KAAK,EAACa,YADH;AAEHZ,MAAAA,WAAW,EAACK;AAFT,KAAP;AAIH;;AACD,SAAOP,gBAAP;AACH,CAbD;;AAeA,MAAMe,YAAY,GAAIC,KAAD,IAAU;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCpB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMmB,oBAAoB,GAAIX,IAAD,IAAS;AAClCU,IAAAA,kBAAkB,CAAC;AACfZ,MAAAA,IAAI,EAAC,KADU;AAEfE,MAAAA,IAAI,EAACA;AAFU,KAAD,CAAlB;AAIH,GALD;;AAMA,QAAMY,yBAAyB,GAAIP,EAAD,IAAO;AACrCK,IAAAA,kBAAkB,CAAC;AACfZ,MAAAA,IAAI,EAAC,QADU;AAEfO,MAAAA,EAAE,EAACA;AAFY,KAAD,CAAlB;AAIH,GALD;;AAMA,QAAMQ,WAAW,GAAG;AAChBpB,IAAAA,KAAK,EAAEgB,SAAS,CAAChB,KADD;AAEhBC,IAAAA,WAAW,EAAEe,SAAS,CAACf,WAFP;AAGhBoB,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3BD;;GAAMT,Y;;KAAAA,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\"\nimport CartContext from \"./Cart-Context\"\n\nconst defaultCartState = {\n    items:[],\n    totalAmount: 0\n}\n\nconst cartReducer = (state,action)=>{\n    if(action.type==='ADD'){\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount\n        const existingCartItemIndex = state.items.findIndex(\n            (item)=> item.id === action.item.id\n        );\n\n        return {\n            items:updatedItems,\n            totalAmount:updatedTotalAmount\n        }\n    }\n    return defaultCartState\n}\n\nconst CartProvider = (props) =>{\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n    \n    const addItemToCartHandler = (item) =>{\n        dispatchCartAction({\n            type:\"ADD\",\n            item:item\n        })\n    }\n    const removeItemFromCartHandler = (id) =>{\n        dispatchCartAction({\n            type:\"REMOVE\",\n            id:id\n        })\n    }\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n    return(\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n}\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}